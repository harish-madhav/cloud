OPENMPI:

install-
sudo apt-get install libopenmpi-dev; 
 sudo apt-get install openmpi-bin

PROGRAM:
#inlcude<stdio.h>
#include<omp.h>
int main(){
int myid,total_num;
#pragma omp parallel private(myid)
{
myid=omp_get_thread_num();
total_num=omp_get_num_threads();
printf("hello world from %d process out of total process %d",myid,total_num);
}
printf("program ends!");
return 0;
}

COMPILE: gcc -fopenmp hello_world.c -o hello_world.out
RUN: ./hello_world.out

MPICH:

program:
#include<stdio.h>
#include<mpi.h>
int main(int argv,char ** argc){
int rank,size;
{
MPI_Init(NULL,NULL);
MPI_Comm_rank(MPI_COMM_WORLD,&rank);
MPI_Comm_size(MPI_COMM_WORLD,&size);
MPI_Finalize();
printf("HELLO WORLD FROM %d OUT OF TOTAL PROCESDS %d\n",rank,size);
}
printf("program ends");
return 0;
}

COMPILE: mpicc hello.c -o hello
RUN:mpirun -np 4 ./hello

SPARK:
sudo apt update
sudo apt install default-jdk
sudo apt install scala
sudo su
mkdir /opt/spark
cd /opt/spark
wget https://dlcdn.apache.org/spark/spark-3.5.3/spark-3.5.3-bin-hadoop3.tgz
tar xvf spark-3.5.3-bin-hadoop3.tgz
cd
ll
nano .bashrc
SPARK_HOME=/opt/spark/spark-3.5.3-bin-hadoop3
export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/bin
source .bashrc
spark-shell
CODE:

val inputfile = sc.textFile("/opt/spark/file.txt")
val counts=inputfile.flatMap(line => line.split(" ")).map(word => (word,1)).reduceByKey(_+_)
counts.saveAsTextFile("output")

cd output
ls
cat part-00000

DOCKER:
sudo usermod -aG docker $USER
sudo systemctl start docker

mkdir test
cd test
touch readme.txt
touch DockerFile
ls
gedit DockerFile
FROM ubuntu
CMD ["echo","hello i am docker"]S
sudo docker build -t mydocker .
sudo docker images
sudo docker run mydocker
sudo chown -R $(whoami) ~/.docker
docker login
docker pull ubuntu
docker run ubuntu
docker run -d ubuntu
docker images
docker ps
docker ps -a
docker run -it ubuntu /bin/bash
docker run redis
docker pull redis
docker ps -a
docker ps -l
docker stop containerid
docker images
sudo systemctl status docker
docker rmi -f  redis
docker login
docker info
docker history --human redis
docker search ubuntu
docker volume create
docker volume ls
docker logout


CloudSim

1) https://github.com/Cloudslab/cloudsim/releases -> download sourcecode.zip of cloudsim5.0

2) https://commons.apache.org/proper/commons-math/download_math.cgi -> binaries->download beta1.zip

3) https://www.eclipse.org/downloads/packages/ -> windows eclipse -> new java project -> name, disable default location -> location of extracted cloudsim -> finish

4) package explorer -> right click cloudsim-> properties

5) java build path-> libraries-> module path -> add external jar -> math folder ctrl+a -> apply and close

6) cloudsim exapmple1.java -> run

CloudAnalyst
1) https://sourceforge.net/projects/cloudanalystnetbeans/  -> download

2) https://netbeans.apache.org/front/main/download/nb17/index.html
insrtall first one x64.exe

click exe file to install

3) open apache netBeans -> file -> open project -> cloud analyst folder -> cloudanalyst file

4) select run -> error ok -> world map -> configure simulation -> 
	add dc2 in another region
	add ub2 and map it to dc2
	done -> run simulation -> analysis shown
